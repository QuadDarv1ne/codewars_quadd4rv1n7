/**
 * Функция для генерации всех возможных валидных комбинаций скобок для заданного числа пар.
 * 
 * Эта функция использует рекурсивный подход для построения всех строк, состоящих из `n` пар скобок,
 * при этом каждая строка является валидной, то есть в любой момент времени количество открывающих скобок
 * не меньше количества закрывающих скобок, а в конце количество открывающих и закрывающих скобок одинаково.
 * 
 * Пример:
 * balancedParens(3) => ["()()()", "(())()", "()(())", "(()())", "((()))"]
 * 
 * @param {number} n - Количество пар скобок, для которых нужно сгенерировать все возможные валидные комбинации.
 * 
 * @returns {string[]} - Массив строк, представляющих все валидные комбинации скобок.
 */
function balancedParens(n) {
  const result = [];
  
  // Вспомогательная функция для генерации валидных комбинаций скобок
  function generate(current, open, close) {
    // Базовый случай: если длина строки равна 2 * n, то комбинация завершена
    if (current.length === 2 * n) {
      result.push(current);
      return;
    }
    
    // Добавляем открывающую скобку, если это возможно
    if (open < n) {
      generate(current + '(', open + 1, close);
    }
    
    // Добавляем закрывающую скобку, если это возможно
    if (close < open) {
      generate(current + ')', open, close + 1);
    }
  }

  // Начинаем рекурсивную генерацию с пустой строки и 0 открытых и закрытых скобок
  generate('', 0, 0);

  return result;
}

/*
Хижина программиста Æ 
https://t.me/hut_programmer_07  
@quadd4rv1n7
*/
